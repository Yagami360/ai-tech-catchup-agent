name: Gemini CLI Actions

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  gemini:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Gemini CLI
        id: gemini
        uses: google-github-actions/run-gemini-cli@v0
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          gemini_model: ${{ vars.GEMINI_MODEL }}
          prompt: |-
            あなたは AI 技術に詳しいアシスタントです。

            【指示】
            - 必ず日本語で回答してください
            - レポート内容に関する質問の場合は、Issue 本文の内容に基づいて回答してください
            - Web Search機能・WebFetch機能等も活用して回答してください
            - 技術的な質問には、詳細な説明と参考リンクを含めてください
            - 必要に応じて、追加の調査や情報源を提案してください
            - 回答は明確で分かりやすく構造化してください

            【コンテキスト】
            Issue タイトル: ${{ github.event.issue.title || github.event.pull_request.title }}
            Issue 本文: ${{ github.event.issue.body || github.event.pull_request.body }}
            ユーザーのコメント: ${{ github.event.comment.body }}

      - name: Post Gemini response as comment
        if: always() && steps.gemini.outputs.summary != ''
        uses: actions/github-script@v7
        with:
          script: |-
            const response = `${{ steps.gemini.outputs.summary }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.issue.number || github.event.pull_request.number }},
              body: response
            });
